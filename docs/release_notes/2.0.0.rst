
Public interface changes
~~~~~~~~~~~~~~~~~~~~~~~~

Some ``run.py`` scripts can be broken by this. Both ``set_generic``
and ``add_config`` works differently internally.

``set_generic`` and ``set_sim_option`` now only affects files added
before the call so reordering within the ``run.py`` can be needed.

``add_config`` on the test case level will no longer discard
configurations added on the test bench level. This affects users
mixing adding configurations on both test and test case level for the
same test bench. Adding a configuration on the test bench level is now
seen as a shorthand for adding the configuration to all test cases
within the test bench. Configurations are only held at the test case
level now. Before there could be configurations on multiple levels
where the most specific level ignored all others. I now recommend
writing a for loop over test_bench.get_tests() adding configurations
to each test individually, see the updated generate_tests example.

We have also forbidden to have configurations without name (""), this
is since the default configuration of all test cases has no name. The
``post_check`` and ``pre_config`` can now be set using
``set_pre_config`` also without using ``add_config`` removing the need
to add a single unnamed configuration and instead setting these in the
default configuration.

This internal restructuring has been made to allow a sane data model
of configurations where they are attached to test cases. This allows
us to expose configurations objects on the public API in the future
allowing users more control and visibility. The current behavior of
configurations is also better documented than it ever was.

I suggest reading the section on :ref:`configurations <configurations>` in the docs.

- Replace ``disable_ieee_warnings`` and ``set_pli`` with corresponding simulation options.
- Adds ``--version`` flag
- Added ``--gui`` flag for GHDL to open gtkwave. Also allows saving waveform without opening gui with ``--gtkwave-fmt`` flag.
