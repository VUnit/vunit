# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this file,
# You can obtain one at http://mozilla.org/MPL/2.0/.
#
# Copyright (c) 2014-2024, Lars Asplund lars.anders.asplund@gmail.com

"""
Verilog tokens
"""

from enum import Enum

from typing_extensions import Final


class TokenKind(Enum):
    PREPROCESSOR = "preprocessor"
    STRING = "string"
    COMMENT = "comment"
    IDENTIFIER = "identifier"
    ESCAPED_NEWLINE = "escaped_newline"
    NEWLINE = "newline"
    WHITESPACE = "whitespace"
    MULTI_COMMENT = "multi_comment"
    COLON = "colon"
    SEMI_COLON = "semi_colon"
    DOUBLE_COLON = "double_colon"
    HASH = "hash"
    EQUAL = "equal"
    LPAR = "lpar"
    RPAR = "rpar"
    LBRACKET = "lbracket"
    RBRACKET = "rbracket"
    LBRACE = "lbrace"
    RBRACE = "rbrace"
    COMMA = "comma"
    OTHER = "other"


class KeywordKind(Enum):
    ACCEPT_ON = "accept_on"
    ALIAS = "alias"
    ALWAYS = "always"
    ALWAYS_COMB = "always_comb"
    ALWAYS_FF = "always_ff"
    ALWAYS_LATCH = "always_latch"
    AND = "and"
    ASSERT = "assert"
    ASSIGN = "assign"
    ASSUME = "assume"
    AUTOMATIC = "automatic"
    BEFORE = "before"
    BEGIN = "begin"
    BIND = "bind"
    BINS = "bins"
    BINSOF = "binsof"
    BIT = "bit"
    BREAK = "break"
    BUF = "buf"
    BUFIF0 = "bufif0"
    BUFIF1 = "bufif1"
    BYTE = "byte"
    CASE = "case"
    CASEX = "casex"
    CASEZ = "casez"
    CELL = "cell"
    CHANDLE = "chandle"
    CHECKER = "checker"
    CLASS = "class"
    CLOCKING = "clocking"
    CMOS = "cmos"
    CONFIG = "config"
    CONST = "const"
    CONSTRAINT = "constraint"
    CONTEXT = "context"
    CONTINUE = "continue"
    COVER = "cover"
    COVERGROUP = "covergroup"
    COVERPOINT = "coverpoint"
    CROSS = "cross"
    DEASSIGN = "deassign"
    DEFAULT = "default"
    DEFPARAM = "defparam"
    DESIGN = "design"
    DISABLE = "disable"
    DIST = "dist"
    DO = "do"
    EDGE = "edge"
    ELSE = "else"
    END = "end"
    ENDCASE = "endcase"
    ENDCHECKER = "endchecker"
    ENDCLASS = "endclass"
    ENDCLOCKING = "endclocking"
    ENDCONFIG = "endconfig"
    ENDFUNCTION = "endfunction"
    ENDGENERATE = "endgenerate"
    ENDGROUP = "endgroup"
    ENDINTERFACE = "endinterface"
    ENDMODULE = "endmodule"
    ENDPACKAGE = "endpackage"
    ENDPRIMITIVE = "endprimitive"
    ENDPROGRAM = "endprogram"
    ENDPROPERTY = "endproperty"
    ENDSPECIFY = "endspecify"
    ENDSEQUENCE = "endsequence"
    ENDTABLE = "endtable"
    ENDTASK = "endtask"
    ENUM = "enum"
    EVENT = "event"
    EVENTUALLY = "eventually"
    EXPECT = "expect"
    EXPORT = "export"
    EXTENDS = "extends"
    EXTERN = "extern"
    FINAL = "final"
    FIRST_MATCH = "first_match"
    FOR = "for"
    FORCE = "force"
    FOREACH = "foreach"
    FOREVER = "forever"
    FORK = "fork"
    FORKJOIN = "forkjoin"
    FUNCTION = "function"
    GENERATE = "generate"
    GENVAR = "genvar"
    GLOBAL = "global"
    HIGHZ0 = "highz0"
    HIGHZ1 = "highz1"
    IF = "if"
    IFF = "iff"
    IFNONE = "ifnone"
    IGNORE_BINS = "ignore_bins"
    ILLEGAL_BINS = "illegal_bins"
    IMPLEMENTS = "implements"
    IMPLIES = "implies"
    IMPORT = "import"
    INCDIR = "incdir"
    INCLUDE = "include"
    INITIAL = "initial"
    INOUT = "inout"
    INPUT = "input"
    INSIDE = "inside"
    INSTANCE = "instance"
    INT = "int"
    INTEGER = "integer"
    INTERCONNECT = "interconnect"
    INTERFACE = "interface"
    INTERSECT = "intersect"
    JOIN = "join"
    JOIN_ANY = "join_any"
    JOIN_NONE = "join_none"
    LARGE = "large"
    LET = "let"
    LIBLIST = "liblist"
    LIBRARY = "library"
    LOCAL = "local"
    LOCALPARAM = "localparam"
    LOGIC = "logic"
    LONGINT = "longint"
    MACROMODULE = "macromodule"
    MATCHES = "matches"
    MEDIUM = "medium"
    MODPORT = "modport"
    MODULE = "module"
    NAND = "nand"
    NEGEDGE = "negedge"
    NETTYPE = "nettype"
    NEW = "new"
    NEXTTIME = "nexttime"
    NMOS = "nmos"
    NOR = "nor"
    NOSHOWCANCELLED = "noshowcancelled"
    NOT = "not"
    NOTIF0 = "notif0"
    NOTIF1 = "notif1"
    NULL = "null"
    OR = "or"
    OUTPUT = "output"
    PACKAGE = "package"
    PACKED = "packed"
    PARAMETER = "parameter"
    PMOS = "pmos"
    POSEDGE = "posedge"
    PRIMITIVE = "primitive"
    PRIORITY = "priority"
    PROGRAM = "program"
    PROPERTY = "property"
    PROTECTED = "protected"
    PULL0 = "pull0"
    PULL1 = "pull1"
    PULLDOWN = "pulldown"
    PULLUP = "pullup"
    PULSESTYLE_ONDETECT = "pulsestyle_ondetect"
    PULSESTYLE_ONEVENT = "pulsestyle_onevent"
    PURE = "pure"
    RAND = "rand"
    RANDC = "randc"
    RANDCASE = "randcase"
    RANDSEQUENCE = "randsequence"
    RCMOS = "rcmos"
    REAL = "real"
    REALTIME = "realtime"
    REF = "ref"
    REG = "reg"
    REJECT_ON = "reject_on"
    RELEASE = "release"
    REPEAT = "repeat"
    RESTRICT = "restrict"
    RETURN = "return"
    RNMOS = "rnmos"
    RPMOS = "rpmos"
    RTRAN = "rtran"
    RTRANIF0 = "rtranif0"
    RTRANIF1 = "rtranif1"
    S_ALWAYS = "s_always"
    S_EVENTUALLY = "s_eventually"
    S_NEXTTIME = "s_nexttime"
    S_UNTIL = "s_until"
    S_UNTIL_WITH = "s_until_with"
    SCALARED = "scalared"
    SEQUENCE = "sequence"
    SHORTINT = "shortint"
    SHORTREAL = "shortreal"
    SHOWCANCELLED = "showcancelled"
    SIGNED = "signed"
    SMALL = "small"
    SOFT = "soft"
    SOLVE = "solve"
    SPECIFY = "specify"
    SPECPARAM = "specparam"
    STATIC = "static"
    STRING = "string"
    STRONG = "strong"
    STRONG0 = "strong0"
    STRONG1 = "strong1"
    STRUCT = "struct"
    SUPER = "super"
    SUPPLY0 = "supply0"
    SUPPLY1 = "supply1"
    SYNC_ACCEPT_ON = "sync_accept_on"
    SYNC_REJECT_ON = "sync_reject_on"
    TABLE = "table"
    TAGGED = "tagged"
    TASK = "task"
    THIS = "this"
    THROUGHOUT = "throughout"
    TIME = "time"
    TIMEPRECISION = "timeprecision"
    TIMEUNIT = "timeunit"
    TRAN = "tran"
    TRANIF0 = "tranif0"
    TRANIF1 = "tranif1"
    TRI = "tri"
    TRI0 = "tri0"
    TRI1 = "tri1"
    TRIAND = "triand"
    TRIOR = "trior"
    TRIREG = "trireg"
    TYPE = "type"
    TYPEDEF = "typedef"
    UNION = "union"
    UNIQUE = "unique"
    UNIQUE0 = "unique0"
    UNSIGNED = "unsigned"
    UNTIL = "until"
    UNTIL_WITH = "until_with"
    UNTYPED = "untyped"
    USE = "use"
    UWIRE = "uwire"
    VAR = "var"
    VECTORED = "vectored"
    VIRTUAL = "virtual"
    VOID = "void"
    WAIT = "wait"
    WAIT_ORDER = "wait_order"
    WAND = "wand"
    WEAK = "weak"
    WEAK0 = "weak0"
    WEAK1 = "weak1"
    WHILE = "while"
    WILDCARD = "wildcard"
    WIRE = "wire"
    WITH = "with"
    WITHIN = "within"
    WOR = "wor"
    XNOR = "xnor"
    XOR = "xor"


KEYWORDS: Final = set(item.value for item in KeywordKind)
