[build-system]
requires = ["setuptools >= 35.0.2", "setuptools_scm >= 2.0.0, <3"]
build-backend = "setuptools.build_meta"

[project]
name = "vunit_hdl"
authors = [{ name = "Lars Asplund", email = "lars.anders.asplund@gmail.com" }]
license = { text = "Mozilla Public License 2.0 (MPL 2.0)" }
description = "VUnit is an open source unit testing framework for VHDL/SystemVerilog."
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Natural Language :: English",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Electronic Design Automation (EDA)",
]
dependencies = ["colorama"]
dynamic = ["version"]

[project.urls]
Homepage = "https://vunit.github.io"
Repository = "https://github.com/VUnit/vunit"

[tool.setuptools]
zip-safe = false
packages = [
    "tests",
    "tests.lint",
    "tests.unit",
    "tests.acceptance",
    "vunit",
    "vunit.com",
    "vunit.parsing",
    "vunit.parsing.verilog",
    "vunit.sim_if",
    "vunit.test",
    "vunit.ui",
    "vunit.vivado",
]

[tool.setuptools.dynamic]
version = {attr = "vunit.about.version"}

[tool.black]
line-length = 120

[tool.towncrier]
package = "vunit"
package_dir = "vunit"
single_file = false
filename = "docs/news.inc"
directory = "docs/news.d/"
title_format = false
issue_format = ":vunit_issue:`{issue}`"
underlines = ["-", "~"]

    [[tool.towncrier.section]]
    path = ""

    [[tool.towncrier.type]]
    directory = "breaking"
    name = "Breaking Changes"
    showcontent = true

    [[tool.towncrier.type]]
    directory = "bugfix"
    name = "Bug Fixes"
    showcontent = true

    [[tool.towncrier.type]]
    directory = "deprecation"
    name = "Deprecations"
    showcontent = true

    [[tool.towncrier.type]]
    directory = "doc"
    name = "Documentation"
    showcontent = true

    [[tool.towncrier.type]]
    directory = "feature"
    name = "Features"
    showcontent = true

    [[tool.towncrier.type]]
    directory = "misc"
    name = "Miscellaneous"
    showcontent = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{36,37,38,39,310,311,312}-{fmt,unit,lint,docs}, py{36,37,38,39,310,311,312}-{acceptance,vcomponents}-{activehdl,ghdl,modelsim,nvc,rivierapro}, py{36,37,38,39,310,311,312}-coverage
isolated_build = True

[testenv]
recreate=True
passenv=ALDEC_LICENSE_FILE

deps=
    fmt: black
    pytest
    lint: pycodestyle
    lint: pylint
    lint: mypy
    lint: Pygments
    lint: setuptools
    coverage: coverage
    coverage: pycodestyle
    coverage: pylint
    coverage: mypy
    coverage: Pygments
    coverage: setuptools
    docs: docutils
    docs: furo
    docs: sphinx
    docs: sphinx-argparse
    docs: towncrier

setenv=
    acceptance-activehdl:  VUNIT_SIMULATOR=activehdl
    acceptance-ghdl:       VUNIT_SIMULATOR=ghdl
    acceptance-modelsim:   VUNIT_SIMULATOR=modelsim
    acceptance-nvc:        VUNIT_SIMULATOR=nvc
    acceptance-rivierapro: VUNIT_SIMULATOR=rivierapro

commands=
    fmt:         {envpython} -m black ./ --exclude 'vunit/vhdl/JSON-for-VHDL|.eggs|.git|.hg|.mypy_cache|.nox|.tox|.venv|_build|buck-out|build|dist' {posargs}
    unit:        {envpython} -m pytest -v -ra tests/unit {posargs}
    lint:        {envpython} -m pytest -v -ra tests/lint {posargs}
    docs:        {envpython} tools/build_docs.py {envtmpdir}/docsbuild {posargs}
    acceptance:  {envpython} -m pytest -v -ra tests/acceptance {posargs}
    vcomponents: {envpython} vunit/vhdl/verification_components/run.py --clean
    coverage:    {envpython} -m coverage run --branch --source vunit/ -m pytest tests/
"""
